"""You must implement a function which plots the data, the prediction line, and the loss.
You will plot the x and y coordinates of all data points as well as the prediction line
generated by your theta parameters. Your function must also display the overall loss (J)
in the title, and draw small lines marking the distance between each data point and its
predicted value.
"""

import matplotlib.pyplot as plt
from prediction import predict_

def plot_with_loss(x, y, theta):
    """Plot the data and prediction line from three non-empty numpy.ndarray.
    Args:
    x: has to be an numpy.ndarray, a vector of dimension m * 1.
    y: has to be an numpy.ndarray, a vector of dimension m * 1.
    theta: has to be an numpy.ndarray, a vector of dimension 2 * 1.
    Returns:
    Nothing.
    Raises:
    This function should not raise any Exception.
    """
    plt.scatter(x, y)
    y_hat = predict_(x, theta)
    for i, true_val in enumerate(y):
        plt.plot([x[i], x[i]], [true_val, y_hat[i]], 'r--')
    plt.plot(x, y_hat)
    plt.savefig('image.png')
